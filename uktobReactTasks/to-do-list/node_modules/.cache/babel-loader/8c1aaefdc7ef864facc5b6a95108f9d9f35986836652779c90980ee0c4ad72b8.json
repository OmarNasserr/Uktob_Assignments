{"ast":null,"code":"var _jsxFileName = \"D:\\\\to-do-list\\\\src\\\\components\\\\InputsFields.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputsFields() {\n  _s();\n  const [text, setText] = useState('');\n  const [number, setNumber] = useState(1);\n  const [error, setError] = useState('');\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (text.trim() === '') {\n      setError('Please enter a valid string');\n      return;\n    } else if (isNaN(number) || number <= 0) {\n      setError('Please enter a positive number');\n      return;\n    }\n    setError('');\n    const repeatedText = text.repeat(number);\n    console.log(repeatedText);\n    // Display repeatedText in a new paragraph below the form\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mt-5\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text-input\",\n        children: \"Enter a string:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"text-input\",\n        type: \"text\",\n        value: text,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number-input\",\n        children: \"Enter a number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"number-input\",\n        type: \"number\",\n        value: number,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(InputsFields, \"F7Qaz31JIH0uWbzZnZS20ZdLILk=\");\n_c = InputsFields;\nexport default InputsFields;\nvar _c;\n$RefreshReg$(_c, \"InputsFields\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputsFields","_s","text","setText","number","setNumber","error","setError","handleTextChange","event","target","value","handleNumberChange","handleSubmit","preventDefault","trim","isNaN","repeatedText","repeat","console","log","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","style","color","_c","$RefreshReg$"],"sources":["D:/to-do-list/src/components/InputsFields.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction InputsFields() {\r\n    const [text, setText] = useState('');\r\n    const [number, setNumber] = useState(1);\r\n    const [error, setError] = useState('');\r\n  \r\n    const handleTextChange = (event) => {\r\n      setText(event.target.value);\r\n    };\r\n  \r\n    const handleNumberChange = (event) => {\r\n      setNumber(event.target.value);\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (text.trim() === '') {\r\n        setError('Please enter a valid string');\r\n        return;\r\n      } else if (isNaN(number) || number <= 0) {\r\n        setError('Please enter a positive number');\r\n        return;\r\n      }\r\n      setError('');\r\n      const repeatedText = text.repeat(number);\r\n      console.log(repeatedText);\r\n      // Display repeatedText in a new paragraph below the form\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <form className=\"container mt-5\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"text-input\">Enter a string:</label>\r\n          <input className=\"form-control\"\r\n            id=\"text-input\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={handleTextChange}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"number-input\">Enter a number:</label>\r\n          <input\r\n          className=\"form-control\"\r\n            id=\"number-input\"\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={handleNumberChange}\r\n          />\r\n          <br />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <p style={{ color: 'red' }}>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default InputsFields;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}